{"version":3,"sources":["services/contacts-api.js","redux/contacts/contactsOperations.js","redux/slices/items.js","redux/slices/filter.js","redux/store.js","components/Container/Container.styled.jsx","components/Form/Form.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Input/Input.styled.jsx","components/Input/Input.jsx","redux/contacts/contactsSelectors.js","components/Form/Form.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["fetchContacts","a","axios","get","data","postContact","newContact","post","deleteContact","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contactsFromDB","idContact","itemsSlice","createSlice","name","initialState","entities","isLoading","error","extraReducers","contactsOperations","fulfilled","state","action","payload","pending","rejected","filter","item","id","filterSlice","reducers","actions","rootReducer","items","store","configureStore","reducer","devTools","process","Container","styled","div","Title","h1","SectionTitle","h2","CustomForm","form","CustomButton","button","Button","text","type","onClick","CurrentInput","input","CurrentLabel","label","Input","value","pattern","title","onChange","getContacts","getFilter","getFilteredContact","createSelector","contacts","filterValue","contact","toLowerCase","includes","Form","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleSetInfo","e","target","reset","onSubmit","preventDefault","uuidv4","find","savedContact","alert","required","ContactItem","li","ContactListItem","ContactList","useEffect","filteredContacts","contactsSelectors","map","Filter","App","console","log","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8012482d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3003';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n};\r\n\r\nexport async function postContact(newContact) {\r\n    const { data } = await axios.post('/contacts', (newContact));\r\n    return data;\r\n};\r\n\r\nexport async function deleteContact(deleteContact) {\r\n    const { data } = await axios.delete(`/contacts/${deleteContact}`);\r\n    return data;\r\n };\r\n\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'; // c AsyncThunk \r\n// import * as contactsActions from './contactsActions'; // без AsyncThunk \r\nimport * as contactsAPI from 'services/contacts-api';\r\n\r\n// //без AsyncThunk\r\n// export const fetchContacts = () => async dispatch => {\r\n//     dispatch(contactsActions.fetchContactsRequest());\r\n//     try {\r\n//         const contacts = await contactsAPI.fetchContacts();\r\n//         console.log(`cont`, contacts)\r\n//         dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(contactsActions.fetchContactsError);\r\n//     }\r\n    \r\n// };\r\n\r\n// //c AsyncThunk \r\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const contactsFromDB = await contactsAPI.fetchContacts();\r\n            return contactsFromDB;   \r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    \r\n});\r\n\r\nexport const postContact = createAsyncThunk('contacts/postContacts',\r\n    async (newContact) => {\r\n        try {\r\n            const contactsFromDB = await contactsAPI.postContact(newContact);\r\n            return contactsFromDB;   \r\n        } catch (error) {\r\n            return (error);\r\n        }\r\n    \r\n    });\r\n\r\nexport const deleteContact = createAsyncThunk('contacts/deleteContacts',\r\n    async (idContact) => {\r\n        try {\r\n            await contactsAPI.deleteContact(idContact);\r\n            return idContact;   \r\n        } catch (error) {\r\n            return (error);\r\n        }\r\n    \r\n});","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as contactsOperations from 'redux/contacts/contactsOperations'; // c AsyncThunk\r\n\r\n// const itemsSlice=createSlice({\r\n//   name: 'items',\r\n//   initialState: {\r\n//     entities: [],\r\n//     isLoading: false,\r\n//     error: null,\r\n//   } ,\r\n//   reducers: {\r\n//     addContact: (state, action) => ({ ...state, entities: [action.payload,...state.entities] }),\r\n//     deleteContact: (state, action) => ({ ...state, entities: state.entities.filter((contact) => contact.id !== action.payload), }),\r\n//   }\r\n// });\r\n\r\n\r\nconst itemsSlice=createSlice({\r\n  name: 'items',\r\n  initialState: {\r\n    entities: [],\r\n    isLoading: false,\r\n    error: null,\r\n  } ,\r\n  extraReducers: {\r\n    [contactsOperations.fetchContacts.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        entities: action.payload,\r\n        isLoading: false,\r\n        error: null,\r\n      }\r\n    },\r\n\r\n    [contactsOperations.fetchContacts.pending]: (state) => {\r\n      return {...state, isLoading: true, error: null,}\r\n    },\r\n\r\n    [contactsOperations.fetchContacts.rejected]: (state) => {\r\n      return {...state, isLoading: false, error: \"ERROR\",}\r\n    },\r\n\r\n    [contactsOperations.postContact.fulfilled]: (state, action) => {\r\n      return {...state,\r\n        entities: [...state.entities, action.payload],\r\n        isLoading: false,\r\n        error: null,}\r\n    },\r\n\r\n    [contactsOperations.postContact.pending]: (state) => {\r\n      return {...state, isLoading: true, error: null,}\r\n    },\r\n\r\n    [contactsOperations.postContact.rejected]: (state) => {\r\n      return {...state, isLoading: false, error: \"ERROR\",}\r\n    },\r\n\r\n    [contactsOperations.deleteContact.fulfilled]: (state, action) => {\r\n      return {...state,\r\n        entities: state.entities.filter((item)=>item.id!==action.payload),\r\n        isLoading: false,\r\n        error: null,}\r\n    },\r\n\r\n    [contactsOperations.deleteContact.pending]: (state) => {\r\n      return {...state, isLoading: true, error: null,}\r\n    },\r\n\r\n    [contactsOperations.deleteContact.rejected]: (state) => {\r\n      return {...state, isLoading: false, error: \"ERROR\",}\r\n    },\r\n  }\r\n});\r\n\r\n//export const {addContact, deleteContact} = itemsSlice.actions;\r\nexport default itemsSlice.reducer;\r\n\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst filterSlice=createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n  reducers: {\r\n      filter: (state, action)=> action.payload,\r\n  },\r\n});\r\n\r\nexport const {filter} = filterSlice.actions;\r\nexport default filterSlice.reducer;","import {configureStore } from '@reduxjs/toolkit';\r\nimport items from './slices/items.js';\r\nimport filter from './slices/filter.js';\r\n\r\nconst rootReducer = {\r\n    items,\r\n    filter,\r\n    \r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV!== 'prodaction',\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n \r\n\r\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 400px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  padding: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n`;\n\nexport const Title = styled.h1`\n  display: block;\n  font-size: 26px;\n  font-weight: 800;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const SectionTitle = styled.h2`\n  display: block;\n  font-size: 20px;\n  font-weight: 800;\n  text-align: center;\n  text-transform: uppercase;\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const CustomForm = styled.form`\n  padding: 0px;\n`;\n","import styled from '@emotion/styled';\n\nexport const CustomButton = styled.button`\n  background-color: #ff6b0a;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  padding: 3px 12px;\n  color: #fff;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 16px;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { CustomButton } from './Button.styled';\n\nfunction Button({ text, type, onClick }) {\n  return (\n    <CustomButton type={type} onClick={onClick}>\n      {text}\n    </CustomButton>\n  );\n}\n\n// Button.propTypes = {\n//   text: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n// }\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const CurrentInput = styled.input`\n  display: block;\n  margin-top: 6px;\n  margin-bottom: 20px;\n`;\n\nexport const CurrentLabel = styled.label`\n  text-transform: capitalize;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { CurrentInput, CurrentLabel } from './Input.styled';\n\nexport default function Input({\n  type,\n  name,\n  value,\n  pattern = null,\n  title = null,\n  onChange,\n}) {\n  return (\n    <CurrentLabel>\n      {name}\n      <CurrentInput\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        onChange={onChange}\n      />\n    </CurrentLabel>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.items.entities;\r\nexport const getFilter = (state) => state.filter;\r\n\r\n// export const getFilteredContact = (state) => {\r\n//     const contacts = getContacts(state);\r\n//     const filterValue = getFilter(state);\r\n//     return contacts.filter(contact =>\r\n//         contact.name.toLowerCase().includes(filterValue));\r\n// }\r\n\r\nexport const getFilteredContact = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filterValue) => contacts.filter(contact =>\r\n         contact.name.toLowerCase().includes(filterValue)),)","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CustomForm } from './Form.styled';\nimport Button from '../Button/Button';\nimport Input from '../Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {addContact} from '../../redux/slices/items.js';\nimport {postContact} from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n    \n  const handleSetInfo = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    const id = uuidv4();\n\n    contacts.find(savedContact => savedContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      // : dispatch(addContact({ name, number, id }));\n      : dispatch(postContact({ name, number, id }));\n      \n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <CustomForm onSubmit={handleAddContact}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleSetInfo}\n      />\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleSetInfo}\n      />\n      <Button type=\"submit\" text=\"Add contact\" />\n    </CustomForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { ContactItem} from './ContactListItem.styled';\nimport Button from '../Button/Button';\n// import { deleteContact } from '../../redux/actions/items'; //без Toolkit i Slice\n\n\nexport default function ContactListItem({ name, number, onClick}) {\n  return (\n    <ContactItem>\n      {name} : {number}\n      <Button type=\"button\" text=\"delete\" onClick={onClick} />\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n}","import { useSelector,  useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n// import { deleteContact } from 'redux/slices/items'; //c Slice\nimport ContactListItem from '../ContactListItem/ContactListItem';\n// import * as contactsOperations from '../../redux/contacts/contactsOperations';\n// import * as contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport default function ContactList() {\n  // const contacts = useSelector(contactsSelectors.getContacts);\n  // const filterValue = useSelector(contactsSelectors.getFilter);\n  // console.log(`filter`, filterValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  \n  // const filteredContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filterValue),\n  // );\n\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContact);\n  \n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onClick={()=>dispatch(contactsOperations.deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n}\n\n","import { useDispatch} from 'react-redux';\r\nimport Input from '../Input/Input';\r\nimport { filter } from 'redux/slices/filter';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n     \r\n    const changeFilter = e => {\r\n      dispatch(filter(e.target.value.toLowerCase()));\r\n      \r\n    };\r\n  \r\n     \r\n    return (\r\n      <Input\r\n        name=\"Find contacts by name\"\r\n        type=\"text\"\r\n        onChange={changeFilter}\r\n      />\r\n )\r\n }","// import { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\nimport {\n  Container,\n  Title,\n  SectionTitle,\n} from './components/Container/Container.styled.jsx';\nimport Form from './components/Form/Form.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  console.log(`contacts`, contacts);\n  \n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <Form/>\n      {contacts.length > 0 && <SectionTitle>Contacts</SectionTitle>}\n      {contacts.length > 0 && <Filter/>}\n      <ContactList/>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}